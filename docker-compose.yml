version: '3.8'
services:
  api:
    build:
      context: ./test_genesis
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - redis
      - postgres
      - dynamodb
    env_file:
      - ./test_genesis/.env
    networks:
      - default

  consumer:
    build:
      context: ./test_genesis_consumer
      dockerfile: Dockerfile
    depends_on:
      - dynamodb
    env_file:
      - ./test_genesis_consumer/.env
    networks:
      - default

  dynamodb:
    image: 'amazon/dynamodb-local'
    ports:
      - '8000:8000'
    networks:
      - default

  redis:
    image: 'redis:latest'
    ports:
      - '6379:6379'
    networks:
      - default

  postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: rootroot
      POSTGRES_DB: test_genesis
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: [ "postgres", "-c", "fsync=off" ]
    networks:
      - default

  test:
    build:
      context: ./test_genesis
      dockerfile: Dockerfile.test
    environment:
      NODE_ENV: test
    command: npm run test
    depends_on:
      - postgres
      - redis
      - dynamodb
    env_file:
      - ./test_genesis/.env
    networks:
      - default

volumes:
  postgres_data:

networks:
  default:
